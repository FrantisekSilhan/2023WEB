// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ef_pages_games_and_genres.Data;

#nullable disable

namespace ef_pages_games_and_genres.Migrations
{
    [DbContext(typeof(gameDbContext))]
    [Migration("20240305092731_03Imigrace2")]
    partial class _03Imigrace2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.Property<int>("GamesGameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresGenreId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GamesGameId", "GenresGenreId");

                    b.HasIndex("GenresGenreId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("ef_pages_games_and_genres.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Name = "Doom"
                        },
                        new
                        {
                            GameId = 2,
                            Name = "Quake"
                        },
                        new
                        {
                            GameId = 3,
                            Name = "Final Fantasy"
                        },
                        new
                        {
                            GameId = 4,
                            Name = "Baldur's Gate"
                        },
                        new
                        {
                            GameId = 5,
                            Name = "Tetris"
                        },
                        new
                        {
                            GameId = 6,
                            Name = "Bejeweled"
                        });
                });

            modelBuilder.Entity("ef_pages_games_and_genres.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Shooter"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "RPG"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Puzzle"
                        });
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.HasOne("ef_pages_games_and_genres.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ef_pages_games_and_genres.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
